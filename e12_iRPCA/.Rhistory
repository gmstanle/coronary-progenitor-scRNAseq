'A2m','Adm','Gja4','Gja5'),
height = 9, width = 11)
#
# # isolate SVc and CV
# rm(pc.scores, dt.pca.2)
# pc.scores = fread(paste0(cordir, 'PC_allscores.csv'))
# dt.pca.2 = merge(dt.pca[gene %in% c('Aplnr','Nr2f2','Corin','Fbln2')],
#                  pc.scores[,c('cell.name',colnames(pc.scores)[colnames(pc.scores) %like% "PC[0-9]"]), with = F],
#                  by = 'cell.name')
#
# plt=ggplot(dt.pca.2, aes(PC2.score, PC3.score, color = log10.cpm)) + geom_point() +
#   scale_color_gradientn(colours=brewer.pal(9,'YlOrBr')[3:9]) +
#   facet_wrap(~gene) + coord_fixed() +
#   geom_abline(intercept = -.25)
# plt
# save_plot('all_r3/all_r3_valve_separation.pdf',plt,ncol=2, nrow=2, base_height = 3.5)
#
# cells.allr3.valve = pc.scores[PC3.score < PC2.score - .25, cell.name]
# cells.allr3.rest = pc.scores[PC3.score >= PC2.score - .25, cell.name]
#
# pdf('all_r3/all_r3_valve_separation_verification.pdf', height = 4, width = 4)
# with(pc.scores, plot(PC2.score, PC3.score, pch = 20))
# with(pc.scores[cell.name %in% cells.allr3.valve],points(PC2.score, PC3.score, col = 'green', pch = 20 ))
# dev.off()
#
#
# save(cells.allr3.valve, file = 'all_r3/all_r3_valve.RData')
# write.table(cells.allr3.valve, file = 'all_r3/all_r3_valve.txt')
# save(cells.allr3.rest, file = 'all_r3/all_r3_rest.RData')
# isolate SVc and CV
rm(pc.scores, dt.pca.2)
pc.scores = fread(paste0(cordir, 'PC_allscores.csv'))
dt.pca.2 = merge(dt.pca[gene %in% c('Aplnr','Nr2f2','Corin','Fbln2')],
pc.scores[,c('cell.name',colnames(pc.scores)[colnames(pc.scores) %like% "PC[0-9]"]), with = F],
by = 'cell.name')
plt=ggplot(dt.pca.2, aes(PC2.score, PC3.score, color = log10.cpm)) + geom_point() +
scale_color_gradientn(colours=brewer.pal(9,'YlOrBr')[3:9]) +
facet_wrap(~gene) + coord_fixed() +
geom_abline(intercept = -.25)
plt
?PcaHubert
plt=ggplot(dt.pca.2, aes(PC2.score, PC3.score, color = log10.cpm)) + geom_point() +
scale_color_gradientn(colours=brewer.pal(9,'YlOrBr')[3:9]) +
facet_wrap(~gene) + coord_fixed() +
geom_abline(intercept = .25)
plt
cordir='all_r3/'
load('all_r3/all_r3_rest.RData')
cordir='all_r3/'
load('all_r3/all_r3_rest.RData')
pc.scores = fread(paste0('all_r6/', 'PC_allscores.csv'))
pc.scores[, rest:=F]
pc.scores[cell.name %in% cells.allr3.rest, rest:=T]
ggplot(pc.scores, aes(PC2.score, PC3.score, color=r7.old)) +
geom_point() +
coord_fixed() +
geom_abline(intercept = .25)
ggplot(pc.scores, aes(PC2.score, PC3.score, color=rest)) +
geom_point() +
coord_fixed() +
geom_abline(intercept = .25)
load('all_r3/all_r3_rest.RData')
pc.scores = fread(paste0('all_r3/', 'PC_allscores.csv'))
pc.scores[, rest:=F]
pc.scores[cell.name %in% cells.allr3.rest, rest:=T]
ggplot(pc.scores, aes(PC2.score, PC3.score, color=rest)) +
geom_point() +
coord_fixed() +
geom_abline(intercept = .25)
ggplot(pc.scores, aes(PC2.score, PC3.score, color=rest)) +
geom_point() +
coord_fixed() +
geom_abline(intercept = .26)
ggplot(pc.scores, aes(PC2.score, PC3.score, color=rest)) +
geom_point() +
coord_fixed() +
geom_abline(intercept = .27)
ggplot(pc.scores, aes(PC2.score, PC3.score, color=rest)) +
geom_point() +
coord_fixed() +
geom_abline(intercept = .28)
cells.allr3.valve = pc.scores[PC3.score > PC2.score - .28, cell.name]
cells.allr3.rest = pc.scores[PC3.score <= PC2.score - .28, cell.name]
with(pc.scores, plot(PC2.score, PC3.score, pch = 20))
with(pc.scores[cell.name %in% cells.allr3.valve],points(PC2.score, PC3.score, col = 'green', pch = 20 ))
cells.allr3.valve = pc.scores[PC3.score > PC2.score + .28, cell.name]
cells.allr3.rest = pc.scores[PC3.score <= PC2.score + .28, cell.name]
with(pc.scores, plot(PC2.score, PC3.score, pch = 20))
with(pc.scores[cell.name %in% cells.allr3.valve],points(PC2.score, PC3.score, col = 'green', pch = 20 ))
rm(list=ls()[ls() %like% 'cells.*'])
cordir='all_r3/'
system(paste0('mkdir ',cordir));
system(paste0('mkdir ',file.path(cordir,'biplots')));
load('all_r1/cells_hbb_hi.RData')
load('endocard_refine_r5_v2/cells_endocardRefine.r5.v2.endocard.Rdata')
load('endocard_refine_r5_v2/cells_endocardRefine.r5.v2.pdgfra.Rdata')
load('endocard_refine_r4_v2/cells_.endocardRefine.r4.v2.Fbln5.Rdata')
dt.pca = dt.fv1_NS.good[!cell.name %in% c(cells.hbb.hi,
cells.endocardRefine.r5.v2.endocard,
cells.endocardRefine.r5.v2.pdgfra,
cells.endocardRefine.r4.v2.Fbln2)][!gene %in% genes.cc]
setkey(dt.pca)
cell.info = fv1_NS.cell.info[!cell.name %in% cells.hbb.hi]
cell.info[, experiment := sort.plate]
cell.info[, experiment_color := sort.plate_color]
# n.pcs = 15
# pca.d1 <- dimplots.pca.lowMem(dt.pca,cell.info,cordir,suffix='',max.genes = 30,ncp=n.pcs,
#                               min.cells.detect=1,n.cores = 8)
# plot.ggpairs.wExptCols(cell.info,dir=cordir,suffix='',num.pcs = n.pcs,height=25,width=25,sigType = 'Sig',annot.expt = F)
# plot.ggpairs.wExptCols(cell.info,dir=cordir,suffix='',num.pcs = n.pcs,height=25,width=25,sigType = 'PC',annot.expt = F)
#
#
# make.facet.biplots(dt.pca,c(paste0('PC',2),paste0('PC',3)),cordir,size=1.5, plot.pdf = T)
# make.facet.biplots(dt.pca,c(paste0('PC',2),paste0('PC',3)),cordir,size=1.5, plot.pdf = T,
#                    custom.genes = c('Pdgfra','Fbln2','Gpr126','Tbx5','Aplnr','Nr2f2','Smoc1',
#                                     'Itih3','Corin','Fst','Npr3','Apln','Cpe','Col14a1','Col1a1',
#                                     'A2m','Adm','Gja4','Gja5'),
#                    height = 9, width = 11)
#
# isolate SVc and CV
rm(pc.scores, dt.pca.2)
pc.scores = fread(paste0(cordir, 'PC_allscores.csv'))
dt.pca.2 = merge(dt.pca[gene %in% c('Aplnr','Nr2f2','Corin','Fbln2')],
pc.scores[,c('cell.name',colnames(pc.scores)[colnames(pc.scores) %like% "PC[0-9]"]), with = F],
by = 'cell.name')
plt=ggplot(dt.pca.2, aes(PC2.score, PC3.score, color = log10.cpm)) + geom_point() +
scale_color_gradientn(colours=brewer.pal(9,'YlOrBr')[3:9]) +
facet_wrap(~gene) + coord_fixed() +
geom_abline(intercept = .28)
plt
save_plot('all_r3/all_r3_valve_separation.pdf',plt,ncol=2, nrow=2, base_height = 3.5)
cells.allr3.valve = pc.scores[PC3.score > PC2.score + .28, cell.name]
cells.allr3.rest = pc.scores[PC3.score <= PC2.score + .28, cell.name]
pdf('all_r3/all_r3_valve_separation_verification.pdf', height = 4, width = 4)
with(pc.scores, plot(PC2.score, PC3.score, pch = 20))
with(pc.scores[cell.name %in% cells.allr3.valve],points(PC2.score, PC3.score, col = 'green', pch = 20 ))
dev.off()
save(cells.allr3.valve, file = 'all_r3/all_r3_valve.RData')
write.table(cells.allr3.valve, file = 'all_r3/all_r3_valve.txt')
save(cells.allr3.rest, file = 'all_r3/all_r3_rest.RData')
rm(list=ls()[ls() %like% 'cells.*'])
cordir='all_r4/'
system(paste0('mkdir ',cordir));
system(paste0('mkdir ',file.path(cordir,'biplots')));
load('all_r3/all_r3_rest.RData')
dt.pca = dt.fv1_NS.good[cell.name %in% cells.allr3.rest][!gene %in% genes.cc]
setkey(dt.pca)
cell.info = copy(fv1_NS.cell.info)
cell.info[, experiment := sort.plate]
cell.info[, experiment_color := sort.plate_color]
n.pcs = 15
pca.d1 <- dimplots.pca.lowMem(dt.pca,cell.info,cordir,suffix='',max.genes = 30,ncp=n.pcs,
min.cells.detect=1,n.cores = 8)
rm(list=ls()[ls() %like% 'cells.*'])
cordir='all_r4/'
system(paste0('mkdir ',cordir));
system(paste0('mkdir ',file.path(cordir,'biplots')));
load('all_r3/all_r3_rest.RData')
dt.pca = dt.fv1_NS.good[cell.name %in% cells.allr3.rest][!gene %in% genes.cc]
setkey(dt.pca)
cell.info = copy(fv1_NS.cell.info)
cell.info[, experiment := sort.plate]
cell.info[, experiment_color := sort.plate_color]
n.pcs = 15
pca.d1 <- dimplots.pca.lowMem(dt.pca,cell.info,cordir,suffix='',max.genes = 30,ncp=n.pcs,
min.cells.detect=1,n.cores = 8)
plot.ggpairs.wExptCols(cell.info,dir=cordir,suffix='',num.pcs = n.pcs,height=25,width=25,sigType = 'Sig',annot.expt = F)
# registerDoMC(8)
# foreach(i=1:n.pcs) %dopar% {
#   make.facet.biplots(dt.pca,c(paste0('PC',i),paste0('PC',i)),cordir,ax.suf = c('.pos','.neg'),size=1.5,
#                      height = 18,width = 22,num.genes = 30, plot.pdf = T)
# }
make.facet.biplots(dt.pca,c(paste0('PC',15),paste0('PC',15)), cordir,size=1.5, plot.pdf = T, ax.suf =c('.pos','.neg'), num.genes = 15)
# remove 3 immune cells
pc.scores = fread(paste0(cordir, 'PC_allscores.csv'))
dt.pca.2 = merge(dt.pca[gene %in% c('Pecam1','C1qb','Esam')],
pc.scores[,c('cell.name',colnames(pc.scores)[colnames(pc.scores) %like% "PC[0-9]"]), with = F],
by = 'cell.name')
plt=ggplot(dt.pca.2, aes(PC15.pos, PC15.neg, color = log10.cpm)) + geom_point() +
scale_color_gradientn(colours=brewer.pal(9,'YlOrBr')[3:9]) +
facet_wrap(~gene) + coord_fixed() +
geom_abline(intercept = -.3)
plt
# save_plot('all_r4/all_r4_separation.pdf',plt,ncol=3, nrow=1, base_height = 2.5)
#
# cells.allr4.immune = pc.scores[PC15.score > .3, cell.name]
# cells.allr4.rest = pc.scores[PC15.score <= .3, cell.name]
#
# pdf('all_r4/all_r4_SVv_separation_verification.pdf', height = 4, width = 4)
# with(pc.scores, plot(PC15.pos, PC15.neg, pch = 20))
# with(pc.scores[cell.name %in% cells.allr4.immune],points(PC15.pos, PC15.neg, col = 'green', pch = 20 ))
# dev.off()
#
#
# save(cells.allr4.immune, file = 'all_r4/all_r4_immune.RData')
# write.table(cells.allr4.immune, file = 'all_r4/all_r4_immune.txt')
# save(cells.allr4.rest, file = 'all_r4/all_r4_rest.RData')
# write.table(cells.allr4.rest, file = 'all_r4/all_r4_rest.txt')
save_plot('all_r4/all_r4_separation.pdf',plt,ncol=3, nrow=1, base_height = 2.5)
cells.allr4.immune = pc.scores[PC15.score > .3, cell.name]
cells.allr4.rest = pc.scores[PC15.score <= .3, cell.name]
pdf('all_r4/all_r4_SVv_separation_verification.pdf', height = 4, width = 4)
with(pc.scores, plot(PC15.pos, PC15.neg, pch = 20))
with(pc.scores[cell.name %in% cells.allr4.immune],points(PC15.pos, PC15.neg, col = 'green', pch = 20 ))
dev.off()
save(cells.allr4.immune, file = 'all_r4/all_r4_immune.RData')
write.table(cells.allr4.immune, file = 'all_r4/all_r4_immune.txt')
save(cells.allr4.rest, file = 'all_r4/all_r4_rest.RData')
write.table(cells.allr4.rest, file = 'all_r4/all_r4_rest.txt')
source('~/Dropbox/singlecell-pipeline/fetal_venule/exp1_nextseq/iRPCA_NatureSubmission/e12_iRPCA_defineSubtypes.R', echo=TRUE)
source('~/Dropbox/singlecell-pipeline/fetal_venule/exp1_nextseq/iRPCA_NatureSubmission/e12_iRPCA_defineSubtypes.R', echo=TRUE)
source('~/Dropbox/singlecell-pipeline/fetal_venule/e12_finalSubmission/iRPCA_NatureSubmission/e12_iRPCA_defineSubtypes.R', echo=TRUE)
source('~/Dropbox/singlecell-pipeline/fetal_venule/e12_finalSubmission/iRPCA_NatureSubmission/e12_iRPCA_defineSubtypes.R', echo=TRUE)
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), ident.remove = "*.excluded")
?SubsetData
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
cells.use <- seur@cell.names[!seur@meta.data$subtype %like% 'excluded']
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), cells.use = cells.use)
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
cells.use <- seur@cell.names[!seur@meta.data$subtype %like% 'excluded']
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), cells.use = cells.use, subset.raw = T)
source(file.path(rootdir, '../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R'))
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
seur <- SetAllIdent(seur, id='subtype')
pair.res <- pairwiseContinuityAnalysis_v2(object = seur, dir=file.path(rootdir, 'pairwise_analysis'),
genes.use = genes.use)
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
load("../../genelists_finalSubmission/genes_cc_refined.RData")
cells.use <- seur@cell.names[!seur@meta.data$subtype %like% 'excluded']
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), cells.use = cells.use, subset.raw = T)
genes.use <- rownames(seur@data)
genes.use <- genes.use[!genes.use %in% c(genes.cc, 'Rn45s','Lars2','Malat1')]
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
seur <- SetAllIdent(seur, id='subtype')
pair.res <- pairwiseContinuityAnalysis_v2(object = seur, dir=file.path(rootdir, 'pairwise_analysis'))
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
seur <- SetAllIdent(seur, id='subtype')
pair.res <- pairwiseContinuityAnalysis_v2(object = seur, dir= 'pairwise_analysis')
save(pair.res, file="pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -4, disc.conf.cutoff = .6, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -6, disc.conf.cutoff = .6, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -3, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -1, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
TSNEPlot(seur)
TSNEPlot(seur, colors.use = seur@meta.data$subtype_color)
seur@meta.data$subtype_color
TSNEPlot(seur, colors.use = unique(seur@meta.data$subtype_color))
VlnPlot(seur, features.plot = 'Gja4','Gja5')
VlnPlot(seur, features.plot = c('Gja4','Gja5'))
VlnPlot(seur, features.plot = c('Cxcr7','Gja5'))
VlnPlot(seur, features.plot = c('Cxcr4','Gja5'))
VlnPlot(seur, features.plot = c('Cxcr4','Gja5','Mki67'))
VlnPlot(seur, features.plot = c('Cxcr4','Gja5','Mki67', 'Pdgfra'))
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -1, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -3, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
pdf(file.path(rootdir, "pairwise_analysis/connectogram_iRPCAcluster.pdf"), height = 5, width = 7)
pdf( "~/Dropbox/shared with Tianying/Coup manuscript/Nature submission/second revision/new_plots/pairwise_analysis/connectogram_iRPCAcluster.pdf", height = 5, width = 7)
pdf( "~/Dropbox/shared with Tianying/Coup manuscript/Nature submission/second revision/new_plots/connectogram_iRPCAcluster.pdf", height = 5, width = 7)
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
dev.off()
require(Seurat)
load("../data/e12_seurat.Rdata")
seur <- SetAllIdent(seur, id='subtype')
unique(seur@ident)
levels(seur@ident)
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
pdf( "connectogram_iRPCAcluster.pdf", height = 5, width = 7)
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
dev.off()
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
load("../../genelists_finalSubmission/genes_cc_refined.RData")
cells.use <- seur@cell.names[!seur@meta.data$subtype %like% 'excluded']
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), cells.use = cells.use, subset.raw = T)
genes.use <- rownames(seur@data)
genes.use <- genes.use[!genes.use %in% c(genes.cc, 'Rn45s','Lars2','Malat1')]
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
# Inspect the relationships between the three metrics of discreteness/continuity
plot(pair.res[[1]][, c("discrete.median","discrete.conf","f.transition","N.transition")])
# plot score histograms in order of one of the pairwise statistics
pdf(file.path(rootdir,"pairwise_analysis", 'scores_discrete.median.pdf'), width = 3, height = 3)
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
# Inspect the relationships between the three metrics of discreteness/continuity
plot(pair.res[[1]][, c("discrete.median","discrete.conf","f.transition","N.transition")])
# plot score histograms in order of one of the pairwise statistics
pdf("scores_discrete.median.pdf", width = 3, height = 3)
for(i in order(pair.res$pairwise.statistics$discrete.conf)){
stat = pair.res$pairwise.statistics[i, "discrete.median"]
id1=as.character(pair.res$pairwise.statistics[i, "id1"])
id2=as.character(pair.res$pairwise.statistics[i, "id2"])
# print(c(id1, id2))
scores <- pair.res[[2]][paste(id1, id2, "score", sep="_")][[1]]
p=qplot(x=scores) +
xlab(paste(id1, id2, "score")) +
ggtitle(formatC(stat, digits=2)) +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
print(p)
sig.1<- pair.res[[2]][paste(id1, id2, "sig.1", sep="_")][[1]]
sig.2<- pair.res[[2]][paste(id1, id2, "sig.2", sep="_")][[1]]
p=qplot(x=sig.1, y=sig.2) +
xlab(paste(id1, "signature")) +
ylab(paste(id2, "signature")) +
ggtitle(formatC(stat, digits=2)) +
# theme(axis.text.y = element_blank(), axis.title.y = element_blank()) +
coord_fixed() +
xlim(c(0,1))+
ylim(c(0,1))
print(p)
# plist[[j]] <- p
# j=j+1
}
dev.off()
genes.all <- rownames(seur@data)
genes.housekeeping <- grep('^Rp[ls].*', genes.all, value =  T)
genes.housekeeping <- unique(genes.housekeeping, grep('Rn45s', genes.all, value = T))
genes.housekeeping <- unique(genes.housekeeping, grep('Lars2', genes.all, value = T))
genes.housekeeping <- unique(genes.housekeeping, grep('Malat1', genes.all, value = T))
load("../../genelists_finalSubmission/genes_cc_refined.RData")
genes.use <- genes.all[!genes.all %in% c(genes.cc, genes.ieg, genes.housekeeping)]
genes.all <- rownames(seur@data)
genes.housekeeping <- grep('^Rp[ls].*', genes.all, value =  T)
genes.housekeeping <- unique(genes.housekeeping, grep('Rn45s', genes.all, value = T))
genes.housekeeping <- unique(genes.housekeeping, grep('Lars2', genes.all, value = T))
genes.housekeeping <- unique(genes.housekeeping, grep('Malat1', genes.all, value = T))
load("../../genelists_finalSubmission/genes_cc_refined.RData")
genes.use <- genes.all[!genes.all %in% c(genes.cc, genes.housekeeping)]
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
load("../../genelists_finalSubmission/genes_cc_refined.RData")
cells.use <- seur@cell.names[!seur@meta.data$subtype %like% 'excluded']
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), cells.use = cells.use, subset.raw = T)
levels(seur@ident)
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
genes.all <- rownames(seur@data)
genes.housekeeping <- grep('^Rp[ls].*', genes.all, value =  T)
genes.housekeeping <- unique(genes.housekeeping, grep('Rn45s', genes.all, value = T))
genes.housekeeping <- unique(genes.housekeeping, grep('Lars2', genes.all, value = T))
genes.housekeeping <- unique(genes.housekeeping, grep('Malat1', genes.all, value = T))
load("../../genelists_finalSubmission/genes_cc_refined.RData")
genes.use <- genes.all[!genes.all %in% c(genes.cc, genes.housekeeping)]
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
pair.res <- pairwiseContinuityAnalysis_v2(object = seur, dir= 'pairwise_analysis', genes.use = genes.use)
save(pair.res, file="pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
save(pair.res, file="pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
save(pair.res, file="pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
# Inspect the relationships between the three metrics of discreteness/continuity
plot(pair.res[[1]][, c("discrete.median","discrete.conf","f.transition","N.transition")])
# plot score histograms in order of one of the pairwise statistics
pdf("scores_discrete.median.pdf", width = 3, height = 3)
for(i in order(pair.res$pairwise.statistics$discrete.conf)){
stat = pair.res$pairwise.statistics[i, "discrete.median"]
id1=as.character(pair.res$pairwise.statistics[i, "id1"])
id2=as.character(pair.res$pairwise.statistics[i, "id2"])
# print(c(id1, id2))
scores <- pair.res[[2]][paste(id1, id2, "score", sep="_")][[1]]
p=qplot(x=scores) +
xlab(paste(id1, id2, "score")) +
ggtitle(formatC(stat, digits=2)) +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
print(p)
sig.1<- pair.res[[2]][paste(id1, id2, "sig.1", sep="_")][[1]]
sig.2<- pair.res[[2]][paste(id1, id2, "sig.2", sep="_")][[1]]
p=qplot(x=sig.1, y=sig.2) +
xlab(paste(id1, "signature")) +
ylab(paste(id2, "signature")) +
ggtitle(formatC(stat, digits=2)) +
# theme(axis.text.y = element_blank(), axis.title.y = element_blank()) +
coord_fixed() +
xlim(c(0,1))+
ylim(c(0,1))
print(p)
# plist[[j]] <- p
# j=j+1
}
dev.off()
get.markers.by.pct <- function(de.results, n.markers, ident=1){
require(dplyr)
if(ident==1){
return(de.results %>%
tibble::rownames_to_column(var='gene') %>%
filter(p_val < 1e-3, pct.1-pct.2 > 0.05) %>%
top_n(n.markers, pct.1-pct.2) %>%
pull(gene))
}
else if(ident==2){
return(de.results %>%
tibble::rownames_to_column(var='gene') %>%
filter(p_val < 1e-3, pct.1-pct.2 < -0.05) %>%
top_n(n.markers, pct.2-pct.1) %>%
pull(gene))
}
}
x=c("a","b","c")
x
x[length(x):1]
?order
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
pair.res <- pairwiseContinuityAnalysis_v2(object = seur, dir= 'pairwise_analysis', genes.use = genes.use)
save(pair.res, file="pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -3, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -4, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -5, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
# Inspect the relationships between the three metrics of discreteness/continuity
plot(pair.res[[1]][, c("discrete.median","discrete.conf","f.transition","N.transition")])
# plot score histograms in order of one of the pairwise statistics
pdf("scores_discrete.median.pdf", width = 3, height = 3)
for(i in order(pair.res$pairwise.statistics$discrete.conf)){
stat = pair.res$pairwise.statistics[i, "discrete.median"]
id1=as.character(pair.res$pairwise.statistics[i, "id1"])
id2=as.character(pair.res$pairwise.statistics[i, "id2"])
# print(c(id1, id2))
scores <- pair.res[[2]][paste(id1, id2, "score", sep="_")][[1]]
p=qplot(x=scores) +
xlab(paste(id1, id2, "score")) +
ggtitle(formatC(stat, digits=2)) +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
print(p)
sig.1<- pair.res[[2]][paste(id1, id2, "sig.1", sep="_")][[1]]
sig.2<- pair.res[[2]][paste(id1, id2, "sig.2", sep="_")][[1]]
p=qplot(x=sig.1, y=sig.2) +
xlab(paste(id1, "signature")) +
ylab(paste(id2, "signature")) +
ggtitle(formatC(stat, digits=2)) +
# theme(axis.text.y = element_blank(), axis.title.y = element_blank()) +
coord_fixed() +
xlim(c(0,1))+
ylim(c(0,1))
print(p)
# plist[[j]] <- p
# j=j+1
}
rm(list = ls())
require(Seurat)
load("../data/e12_seurat.Rdata")
load("../../genelists_finalSubmission/genes_cc_refined.RData")
cells.use <- seur@cell.names[!seur@meta.data$subtype %like% 'excluded']
seur@meta.data
seur <- SubsetData(SetAllIdent(object = seur, 'subtype'), cells.use = cells.use, subset.raw = T)
levels(seur@ident)
save(pair.res, file="pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
pdf( "~/Dropbox/shared with Tianying/Coup manuscript/Nature submission/second revision/new_plots/connectogram_iRPCAcluster_fixed.pdf", height = 5, width = 7)
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -5, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
source('../../scripts_finalSubmission/pairwiseDiscretenessTest_v2.R')
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
pdf( "~/Dropbox/shared with Tianying/Coup manuscript/Nature submission/second revision/new_plots/connectogram_iRPCAcluster_fixed.pdf", height = 5, width = 7)
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -5, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
dev.off()
pdf( "connectogram_iRPCAcluster_fixed.pdf", height = 5, width = 7)
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -2, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
dev.off()
TSNEPlot(seur, colors.use = unique(seur@meta.data$subtype_color))
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -6, disc.conf.cutoff = .6, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -4, disc.conf.cutoff = .6, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -4, disc.conf.cutoff = .4, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -5, disc.conf.cutoff = .4, edge.width.type = 'fractionOfSmallest.intermediate')
PlotConnectogram(seur, pair.res, colorvec = seur@meta.data$subtype_color, median.disc.cutoff = -5, disc.conf.cutoff = .3, edge.width.type = 'fractionOfSmallest.intermediate')
load("pairwise_analysis/pairwiseResults_iRPCAcluster.Rdata")
# Inspect the relationships between the three metrics of discreteness/continuity
plot(pair.res[[1]][, c("discrete.median","discrete.conf","f.transition","N.transition")])
# plot score histograms in order of one of the pairwise statistics
pdf("scores_discrete.median_fixed.pdf", width = 3, height = 3)
for(i in order(pair.res$pairwise.statistics$discrete.conf)){
stat = pair.res$pairwise.statistics[i, "discrete.median"]
id1=as.character(pair.res$pairwise.statistics[i, "id1"])
id2=as.character(pair.res$pairwise.statistics[i, "id2"])
# print(c(id1, id2))
scores <- pair.res[[2]][paste(id1, id2, "score", sep="_")][[1]]
p=qplot(x=scores) +
xlab(paste(id1, id2, "score")) +
ggtitle(formatC(stat, digits=2)) +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
print(p)
sig.1<- pair.res[[2]][paste(id1, id2, "sig.1", sep="_")][[1]]
sig.2<- pair.res[[2]][paste(id1, id2, "sig.2", sep="_")][[1]]
p=qplot(x=sig.1, y=sig.2) +
xlab(paste(id1, "signature")) +
ylab(paste(id2, "signature")) +
ggtitle(formatC(stat, digits=2)) +
# theme(axis.text.y = element_blank(), axis.title.y = element_blank()) +
coord_fixed() +
xlim(c(0,1))+
ylim(c(0,1))
print(p)
# plist[[j]] <- p
# j=j+1
}
dev.off()
